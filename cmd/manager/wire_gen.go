// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/qmdx00/crobjob/internal/manager/biz"
	"github.com/qmdx00/crobjob/internal/manager/config"
	"github.com/qmdx00/crobjob/internal/manager/log"
	"github.com/qmdx00/crobjob/internal/manager/server"
	"github.com/qmdx00/crobjob/pkg/lifecycle"
)

// Injectors from wire.go:

func initApp() (*lifecycle.App, func(), error) {
	managerConfig := config.NewManagerConfig()
	logger := log.NewManagerLogger(managerConfig)
	tracer, cleanup, err := biz.NewTracer(managerConfig)
	if err != nil {
		return nil, nil, err
	}
	clientConn, cleanup2, err := biz.NewGRPCConn(tracer, managerConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	taskServiceClient := biz.NewTaskServiceClient(clientConn)
	taskBusiness := biz.NewTaskBusiness(logger, taskServiceClient, tracer)
	engine := server.NewHTTPRouter(logger, taskBusiness, tracer)
	transportServer := server.NewHttpServer(logger, engine, managerConfig)
	app := newApp(transportServer)
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
